local Grammar = require 'toolbox.utils.grammar'

local assert = require 'luassert.assert'

describe('Grammar', function()
  describe('.is_plural(object)', function()
    it("should be considered singular if the object isn't a container type", function()
      assert.False(Grammar.is_plural(1))
      assert.False(Grammar.is_plural(2.32))
      assert.False(Grammar.is_plural 'thing')
      assert.False(Grammar.is_plural(true))
      assert.False(Grammar.is_plural(false))
    end)
    it('should use the singular if the subject is a container type of len == 1', function()
      assert.False(Grammar.is_plural({ a = 1 }))
      assert.False(Grammar.is_plural({ 32 }))
    end)
    it('should use the plural if the subject is a container type of len > 1', function()
      assert.True(Grammar.is_plural({ a = 1, z = 26 }))
      assert.True(Grammar.is_plural({ 32, 0 }))
    end)
  end)

  describe('.to_be(subject)', function()
    it("should use the singular if the subject isn't a container type", function()
      assert.equals(Grammar.to_be(1), 'is')
      assert.equals(Grammar.to_be(2.32), 'is')
      assert.equals(Grammar.to_be 'thing', 'is')
      assert.equals(Grammar.to_be(true), 'is')
      assert.equals(Grammar.to_be(false), 'is')
    end)
    it('should use the singular if the subject is a container type of len == 1', function()
      assert.equals(Grammar.to_be({ a = 1 }), 'is')
      assert.equals(Grammar.to_be({ 32 }), 'is')
    end)
    it('should use the plural if the subject is a container type of len > 1', function()
      assert.equals(Grammar.to_be({ a = 1, z = 26 }), 'are')
      assert.equals(Grammar.to_be({ 32, 0 }), 'are')
    end)
  end)
end)
